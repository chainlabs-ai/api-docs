openapi: 3.0.3
info:
  title: Chainlabs API
  description: |-
    ### *The API is still in the design stage and things are subject to change. In fact, your input will be appreciated. Many more categories are yet to be added to the schema, for example, Centralized exchanges, DeFi, etc.* 
    
    The Chainlabs API provides an automated way of retrieving traced seed addresses, corresponding metadata, and screenshot proofs to replace the monthly manual CSV deliveries.
    
    To obtain all the historical as well as newly added entities, traces, and screenshots, use the */entities*, */traces*, */entity_screenshots*, and */trace_screenshots* endpoints. To get modification/deletion events that have taken place on existing data, use the */sync_entities* and */sync_traces* endpoints and modify/delete entities or traces on your local data based on them. 
  version: 0.1.0
paths:
  /entities:
    post:
      tags:
        - Entities
      summary: Get entities filtered by entityIds, categoryIds, entityName, URL, dateTimeAddedFrom, dateTimeAddedTo
      description: Returns the metadata for the entities that match the criteria provided in the request. The metadata will have fields specific to the category of the entity. All entities are returned if the request is empty.
      operationId: entities
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntitiesRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitiesResponse'
        '400':
          description: Invalid request
        '401':
          description: Unauthorized error
        '500':
          description: Internal server error
  /traces:
    post:
      tags:
        - Traces
      summary: Get traces filtered by traceIds, entityIds, categoryIds, tokens, transactionTypes, dateTimeAddedFrom, dateTimeAddedTo
      description: Returns the traces that match the criteria provided in the request. All traces are returned if the request is empty.
      operationId: traces
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TracesRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TracesResponse'
        '400':
          description: Invalid request
        '401':
          description: Unauthorized error
        '500':
          description: Internal server error
  /entity_screenshots:
    post:
      tags:
        - Screenshots
      summary: Get entity screenshots filtered by entityIds, categoryIds, dateTimeAddedFrom, dateTimeAddedTo
      description: Returns a .zip containing the screenshot proofs for the entities that match the criteria provided in the request. All screenshots are returned if the request is empty.
      operationId: entityScreenshots
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityScreenshotsRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/zip:
              schema:
                type: object
        '400':
          description: Invalid request
        '401':
          description: Unauthorized error
        '500':
          description: Internal server error
  /trace_screenshots:
    post:
      tags:
        - Screenshots
      summary: Get trace screenshots filtered by traceIds, entityIds, categoryIds, dateTimeAddedFrom, dateTimeAddedTo
      description: Returns a .zip containing the screenshot proofs for the traces that match the criteria provided in the request. All screenshots are returned if the request is empty.
      operationId: traceScreenshots
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TraceScreenshotsRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/zip:
              schema:
                type: object
        '400':
          description: Invalid request
        '401':
          description: Unauthorized error
        '500':
          description: Internal server error
  /sync_entities:
    post:
      tags:
        - Entities
      summary: Get sync events (modification/deletion) for existing entities filtered by entityIds, dateTimeUpdatedFrom, dateTimeUpdatedTo
      description: Returns sync events (modification/deletion) for the entities that match the criteria provided in the request. All sync events are returned if the request is empty.
      operationId: syncEntities
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncEntitiesRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncEntitiesResponse'
        '400':
          description: Invalid request
        '401':
          description: Unauthorized error
        '500':
          description: Internal server error
  /sync_traces:
    post:
      tags:
        - Traces
      summary: Get sync events (modification/deletion) for existing traces filtered by traceIds, dateTimeUpdatedFrom, dateTimeUpdatedTo
      description: Returns sync events (modification/deletion) for the traces that match the criteria provided in the request. All sync events are returned if the request is empty.
      operationId: syncTraces
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncTracesRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncTracesResponse'
        '400':
          description: Invalid request
        '401':
          description: Unauthorized error
        '500':
          description: Internal server error
components:
  schemas:
    Entity:
      description: The entity object contains all the metadata for an entity
      type: object
      properties:
        entityId:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: Binance
        categoryId:
          type: string
          example: cex
        urls:
          type: array
          items:
            type: string
            example: https://binance.com
        operationalStatus:
              type: string
              enum:
                - Open
                - Closed
                - Updating
        dateTimeAdded:
          type: string
          format: date-time
          example: 2017-07-21T17:32:28Z
        dateTimeUpdated:
          type: string
          format: date-time
          example: 2017-07-21T17:32:28Z
        dateTimeMetadataChecked:
          type: string
          format: date-time
          example: 2017-07-21T17:32:28Z
    Atm:
      description: The metadata for an ATM entity
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          properties:
            countryOfIncorporation:
              type: string
              example: US
            countryOfOperation:
              type: string
              example: US
            countryOfOperationSource:
              type: string
              example: https://source-link.com
            kycNotes:
              type: string
              example: note
            kycVerification:
              type: array
              items:
                type: string
                example: Passport
            locationUrl:
              type: string
              example: https://maps.app.goo.gl/oe4QrRpohBPHZZVy8
            operatedBy:
              type: string
            osint:
              type: string
            supportedFiat:
              type: array
              items:
                type: string
                example: USD
            isLicensed:
              type: string
              enum:
                - Yes
                - No
                - Unknown
            countryOfLicense:
              type: string
              example: US
            countryOfLicenseSource:
              type: string
              example: https://source-link.com
    Crim:
      description: The metadata for a Criminal Enterprise entity
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          properties:
            tags:
              type: array
              items:
                type: string
                example: Violent Crimes
            osint:
              type: string
            isScam:
              type: string
              enum:
                - Yes
                - No
                - Unknown
            scamSource:
              type: string
              example: https://source-link.com
    Csam:
      description: The metadata for a CSAM entity
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          properties:
            tags:
              type: array
              items:
                type: string
                example: Darkweb
            mediaTypes:
              type: array
              items:
                type: string
                example: Videos
            osint:
              type: string
            isScam:
              type: string
              example: Yes
            scamSource:
              type: string
              example: https://source-link.com
    Dnm:
      description: The metadata for a Darknet Market entity
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          properties:
            tags:
              type: array
              items:
                type: string
                example: Darkweb
            marketRules:
              type: string
              example: rules
            osint:
              type: string
            productsAndServices:
              type: array
              items:
                type: string
                example: Drugs
            isScam:
              type: string
              example: Yes
            scamSource:
              type: string
              example: https://source-link.com
    Fct:
      description: The metadata for a Faucet entity
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          properties:
            osint:
              type: string
            isScam:
              type: string
              example: Yes
            scamSource:
              type: string
              example: https://source-link.com
    Gm:
      description: The metadata for a Gambling entity
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          properties:
            tags:
              type: array
              items:
                type: string
                example: Centralized
            countryOfIncorporation:
              type: string
              example: US
            kycInputDate:
              type: string
              format: date
              example: 2017-07-21
            kycVerification:
              type: array
              items:
                type: string
                example: Passport
            osint:
              type: string
            isScam:
              type: string
              example: Yes
            scamSource:
              type: string
              example: https://source-link.com
    Psp:
      description: The metadata for a Payment Service Provider entity
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          properties:
            countryOfIncorporation:
              type: string
              example: US
            osint:
              type: string
            isScam:
              type: string
              example: Yes
            scamSource:
              type: string
              example: https://source-link.com
    Vnh:
      description: The metadata for a VPN and Hosting entity
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          properties:
            tags:
              type: array
              items:
                type: string
                example: Clearnet
            countryOfIncorporation:
              type: string
              example: US
            osint:
              type: string
            isScam:
              type: string
              example: Yes
            scamSource:
              type: string
              example: https://source-link.com
    Trace:
      description: The trace object contains all the information about a Chainlabs tracing transaction, including the seed address and entity label
      type: object
      properties:
        traceId:
          type: integer
          format: int64
          example: 10
        entityId:
          type: integer
          format: int64
          example: 10
        categoryId:
          type: string
          example: cex
        address:
          type: string
          example: 34xp4vRoCGJym3xR7yCVPFHoCNxv4Twseo
        token:
          type: string
          example: btc
        transactionType:
          type: string
          example: deposit
        memo:
          type: integer
          format: int64
          example: 10
        notes:
          type: string
          example: hello
        dateTimeAdded:
          type: string
          format: date-time
          example: 2017-07-21T17:32:28Z
    SyncEntitiesEvent:
      description: The sync event information for entities that have been modified/deleted
      type: object
      properties:
        entityId:
          type: integer
          format: int64
          example: 10
        eventType:
          type: string
          enum:
            - modify
            - delete
        attributeName:
          type: string
          example: entityName
        attributeValue:
          type: string
          example: hello
        dateTimeUpdated:
          type: string
          format: date-time
          example: 2017-07-21T17:32:28Z
    SyncTracesEvent:
      description: The sync event information for traces that have been modified/deleted
      type: object
      properties:
        traceId:
          type: integer
          format: int64
          example: 10
        eventType:
          type: string
          enum:
            - modify
            - delete
        attributeName:
          type: string
          example: entityName
        attributeValue:
          type: string
          example: hello
        dateTimeUpdated:
          type: string
          format: date-time
          example: 2017-07-21T17:32:28Z
    EntitiesRequest:
      description: |-
        The request takes in the following optional parameters to match the returned entities against:
        1. entityIds- List of entityIds
        2. categoryIds- List of categoryIds
        3. entityNameRegex- Regular expression on the entity name
        4. urlRegex- Regular expression on the url
        5. dateTimeAddedFrom- Starting timestamp for the time range during which the entity was made available
        6. dateTimeAddedTo- Ending timestamp for the time range during which the entity was made available
        7. pageToken- Key used to fetch the next page of entities. When empty, the first page is returned. To get the next page of entities, set pageToken value to the nextPageToken returned in the previous response
        8. pageSize- Specifies the number of entities to be returned in a page. The default is 20
      type: object
      properties:
        entityIds:
          type: array
          items:
            type: integer
            format: int64
            example: 10
        categoryIds:
          type: array
          items:
            type: string
            example: cex
        entityNameRegex:
          type: string
          example: hello*
        urlRegex:
          type: string
          example: "*binanc*"
        dateTimeAddedFrom:
          type: string
          format: date-time
          example: 2017-07-21T17:32:28Z
        dateTimeAddedTo:
          type: string
          format: date-time
          example: 2017-07-21T17:32:28Z
        pageToken:
          type: integer
          format: int64
        pageSize:
          type: integer
          default: 20
    TracesRequest:
      description: |-
        The request is optional and takes in the following parameters to match the returned traces against:
        1. traceIds- List of traceIds
        2. entityIds- List of entityIds
        3. categoryIds- List of categoryIds
        4. tokens- List of digitial tokens/coins (BTC, LTC, XRP, ETH, SOL, ALGO, BNB (BEP20), ADA, DOGE, MATIC, BCH, ZEC, DASH, TRX, EOS, XMR, DOT, FTM, XLM, ATOM)
        5. transactionTypes- List of transaction types (deposit, withdraw, direct, external)
        6. dateTimeAddedFrom- Starting timestamp for the time range during which the entity was made available
        7. dateTimeAddedTo- Ending timestamp for the time range during which the entity was made available
        8. pageToken- Key used to fetch the next page of traces. When empty, the first page is returned. To get the next page of traces, set pageToken value to the nextPageToken returned in the previous response
        9. pageSize- Specifies the number of traces to be returned in a page. The default is 30
      type: object
      properties:
        traceIds:
          type: array
          items:
            type: integer
            format: int64
            example: 10
        entityIds:
          type: array
          items:
            type: integer
            format: int64
            example: 10
        categoryIds:
          type: array
          items:
            type: string
            example: cex
        tokens:
          type: array
          items:
            type: string
            example: btc
        transactionTypes:
          type: array
          items:
            type: string
            enum:
            - deposit
            - withdraw
            - direct
            - external
            example: deposit
        dateTimeAddedFrom:
          type: string
          format: date-time
          example: 2017-07-21T17:32:28Z
        dateTimeAddedTo:
          type: string
          format: date-time
          example: 2017-07-21T17:32:28Z
        pageToken:
          type: integer
          format: int64
        pageSize:
          type: integer
          default: 30
    EntityScreenshotsRequest:
      description: |-
        The request is optional and takes in the following parameters to match the returned screenshots against:
        1. entityIds- List of entityIds
        2. categoryIds- List of categoryIds
        3. dateTimeAddedFrom- Starting timestamp for the time range during which the entity was made available
        4. dateTimeAddedTo- Ending timestamp for the time range during which the entity was made available
        5. pageToken- Key used to fetch the next page of entity screenshots. When empty, the first page is returned. To get the next page of entity screenshots, set pageToken value to the nextPageToken returned in the previous response
        6. pageSize- Specifies the number of entity screenshots to be returned in a page. The default is 50
      type: object
      properties:
        entityIds:
          type: array
          items:
            type: integer
            format: int64
            example: 10
        categoryIds:
          type: array
          items:
            type: string
            example: cex
        dateTimeAddedFrom:
          type: string
          format: date-time
          example: 2017-07-21T17:32:28Z
        dateTimeAddedTo:
          type: string
          format: date-time
          example: 2017-07-21T17:32:28Z
        pageToken:
          type: integer
          format: int64
        pageSize:
          type: integer
          default: 50
    TraceScreenshotsRequest:
      description: |-
        The request is optional and takes in the following parameters to match the returned screenshots against:
        1. traceIds- List of traceIds
        2. entityIds- List of entityIds
        3. categoryIds- List of categoryIds
        4. dateTimeAddedFrom- Starting timestamp for the time range during which the entity was made available
        5. dateTimeAddedTo- Ending timestamp for the time range during which the entity was made available
        6. pageToken- Key used to fetch the next page of trace screenshots. When empty, the first page is returned. To get the next page of trace screenshots, set pageToken value to the nextPageToken returned in the previous response
        7. pageSize- Specifies the number of trace screenshots to be returned in a page. The default is 50
      type: object
      properties:
        traceIds:
          type: array
          items:
            type: integer
            format: int64
            example: 10
        entityIds:
          type: array
          items:
            type: integer
            format: int64
            example: 10
        categoryIds:
          type: array
          items:
            type: string
            example: cex
        dateTimeAddedFrom:
          type: string
          format: date-time
          example: 2017-07-21T17:32:28Z
        dateTimeAddedTo:
          type: string
          format: date-time
          example: 2017-07-21T17:32:28Z
        pageToken:
          type: integer
          format: int64
        pageSize:
          type: integer
          default: 50
    SyncEntitiesRequest:
      description: |-
        The request is optional and takes in the following parameters to match the returned sync events against:
        1. entityIds- List of entityIds to find sync events for
        2. dateTimeUpdatedFrom- Starting timestamp for the time range during which the entity was updated
        3. dateTimeUpdatedTo- Ending timestamp for the time range during which the entity was updated
        4. pageToken- Key used to fetch the next page of sync events. When empty, the first page is returned. To get the next page of sync events, set pageToken value to the nextPageToken returned in the previous response
        5. pageSize- Specifies the number of sync events to be returned in a page. The default is 50
      type: object
      properties:
        entityIds:
          type: array
          items:
            type: integer
            format: int64
            example: 10
        dateTimeUpdatedFrom:
          type: string
          format: date-time
          example: 2017-07-21T17:32:28Z
        dateTimeUpdatedTo:
          type: string
          format: date-time
          example: 2017-07-21T17:32:28Z
        pageToken:
          type: integer
          format: int64
        pageSize:
          type: integer
          default: 50
    SyncTracesRequest:
      description: |-
        The request is optional and takes in the following parameters to match the returned sync events against:
        1. traceIds- List of traceIds to find sync events for
        2. dateTimeUpdatedFrom- Starting timestamp for the time range during which the trace was updated
        3. dateTimeUpdatedTo- Ending timestamp for the time range during which the trace was updated
        4. pageToken- Key used to fetch the next page of sync events. When empty, the first page is returned. To get the next page of sync events, set pageToken value to the nextPageToken returned in the previous response
        5. pageSize- Specifies the number of sync events to be returned in a page. The default is 50
      type: object
      properties:
        traceIds:
          type: array
          items:
            type: integer
            format: int64
            example: 10
        dateTimeUpdatedFrom:
          type: string
          format: date-time
          example: 2017-07-21T17:32:28Z
        dateTimeUpdatedTo:
          type: string
          format: date-time
          example: 2017-07-21T17:32:28Z
        pageToken:
          type: integer
          format: int64
        pageSize:
          type: integer
          default: 50
    EntitiesResponse:
      type: object
      properties:
        entities:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Atm'
              - $ref: '#/components/schemas/Crim'
              - $ref: '#/components/schemas/Csam'
              - $ref: '#/components/schemas/Dnm'
              - $ref: '#/components/schemas/Fct'
              - $ref: '#/components/schemas/Gm'
              - $ref: '#/components/schemas/Psp'
              - $ref: '#/components/schemas/Vnh'
        nextPageToken:
          type: integer
          format: int64
    TracesResponse:
      type: object
      properties:
        traces:
          type: array
          items:
            $ref: '#/components/schemas/Trace'
        nextPageToken:
          type: integer
          format: int64
    SyncEntitiesResponse:
      type: object
      properties:
        syncEntitiesEvents:
          type: array
          items:
            $ref: '#/components/schemas/SyncEntitiesEvent'
        nextPageToken:
          type: integer
          format: int64
    SyncTracesResponse:
      type: object
      properties:
        syncTracesEvents:
          type: array
          items:
            $ref: '#/components/schemas/SyncTracesEvent'
        nextPageToken:
          type: integer
          format: int64
